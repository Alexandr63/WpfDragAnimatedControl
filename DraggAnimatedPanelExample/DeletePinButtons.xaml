<UserControl
	xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
	xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
	xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
	xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
	mc:Ignorable="d"
	x:Class="DraggAnimatedPanelExample.DeletePinButtons"
	x:Name="UserControl" Width="54.8" Height="27">
	<UserControl.Resources>
		<Style x:Key="ButtonClose" TargetType="{x:Type Button}">
			<Setter Property="FocusVisualStyle" Value="{StaticResource ButtonFocusVisual}"/>
			<Setter Property="Background" Value="{StaticResource ButtonNormalBackground}"/>
			<Setter Property="BorderBrush" Value="{StaticResource ButtonNormalBorder}"/>
			<Setter Property="BorderThickness" Value="1"/>
			<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
			<Setter Property="HorizontalContentAlignment" Value="Center"/>
			<Setter Property="VerticalContentAlignment" Value="Center"/>
			<Setter Property="Padding" Value="1"/>
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="{x:Type Button}">
						<Border BorderBrush="Black" BorderThickness="1" Background="Black" CornerRadius="15,0,0,15">
							<VisualStateManager.VisualStateGroups>
								<VisualStateGroup x:Name="CommonStates">
									<VisualState x:Name="Normal"/>
									<VisualState x:Name="MouseOver"/>
									<VisualState x:Name="Pressed">
										<Storyboard>
											<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="rectangle">
												<DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}"/>
											</ObjectAnimationUsingKeyFrames>
										</Storyboard>
									</VisualState>
									<VisualState x:Name="Disabled"/>
								</VisualStateGroup>
								<VisualStateGroup x:Name="FocusStates">
									<VisualState x:Name="Unfocused"/>
									<VisualState x:Name="Focused"/>
								</VisualStateGroup>
								<VisualStateGroup x:Name="ValidationStates">
									<VisualState x:Name="Valid"/>
									<VisualState x:Name="InvalidFocused"/>
									<VisualState x:Name="InvalidUnfocused"/>
								</VisualStateGroup>
							</VisualStateManager.VisualStateGroups>
							<Grid>
								<Path Data="M14.833333,10 L29,21.166667" Fill="#FFF4F4F5" Height="Auto" Stretch="Fill" Stroke="#FFFFFEFE" VerticalAlignment="Stretch" Margin="9.25,4.75,3.875,5.5" StrokeThickness="4" StrokeStartLineCap="Round" StrokeEndLineCap="Round"/>
								<Path Data="M7.041,20.209 L18.6875,5.75" Fill="#FFF4F4F5" HorizontalAlignment="Stretch" Stretch="Fill" Stroke="#FFFFFEFE" Width="Auto" Margin="9.25,4.75,3.875,5.5" StrokeThickness="4" StrokeStartLineCap="Round" StrokeEndLineCap="Round"/>
								<Rectangle x:Name="rectangle" Fill="#FF717172" Height="Auto" Stroke="#FFFFFEFE" StrokeThickness="0" VerticalAlignment="Stretch" Width="Auto" Opacity="0.485" RadiusX="0" RadiusY="0" Visibility="Hidden" ClipToBounds="True"/>
							</Grid>
						</Border>
						<ControlTemplate.Triggers>
							<Trigger Property="IsKeyboardFocused" Value="true"/>
							<Trigger Property="ToggleButton.IsChecked" Value="true"/>
							<Trigger Property="IsEnabled" Value="false">
								<Setter Property="Foreground" Value="#ADADAD"/>
							</Trigger>
						</ControlTemplate.Triggers>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>
		
		
		<Style x:Key="CheckBoxPingUnPing" TargetType="{x:Type CheckBox}">
			<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
			<Setter Property="Background" Value="{StaticResource CheckBoxFillNormal}"/>
			<Setter Property="BorderBrush" Value="{StaticResource CheckBoxStroke}"/>
			<Setter Property="BorderThickness" Value="1"/>
			<Setter Property="FocusVisualStyle" Value="{StaticResource EmptyCheckBoxFocusVisual}"/>
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="{x:Type CheckBox}">
						<Border x:Name="border" BorderBrush="{x:Null}" CornerRadius="0,15,15,0">
							<Border.Background>
								<LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
									<GradientStop Color="Black" Offset="0"/>
									<GradientStop Color="Black" Offset="1"/>
								</LinearGradientBrush>
							</Border.Background>
							<VisualStateManager.VisualStateGroups>
								<VisualStateGroup x:Name="CheckStates">
									<VisualState x:Name="Checked">
										<Storyboard>
											<ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Panel.Background).(GradientBrush.GradientStops)[0].(GradientStop.Color)" Storyboard.TargetName="border">
												<EasingColorKeyFrame KeyTime="0" Value="#FF0073FD"/>
											</ColorAnimationUsingKeyFrames>
											<ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Panel.Background).(GradientBrush.GradientStops)[1].(GradientStop.Color)" Storyboard.TargetName="border">
												<EasingColorKeyFrame KeyTime="0" Value="#FF005BC2"/>
											</ColorAnimationUsingKeyFrames>
											<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(Panel.Background).(GradientBrush.GradientStops)[1].(GradientStop.Offset)" Storyboard.TargetName="border">
												<EasingDoubleKeyFrame KeyTime="0" Value="0.742"/>
											</DoubleAnimationUsingKeyFrames>
											<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(Panel.Background).(GradientBrush.GradientStops)[0].(GradientStop.Offset)" Storyboard.TargetName="border">
												<EasingDoubleKeyFrame KeyTime="0" Value="0.143"/>
											</DoubleAnimationUsingKeyFrames>
										</Storyboard>
									</VisualState>
									<VisualState x:Name="Unchecked"/>
									<VisualState x:Name="Indeterminate"/>
								</VisualStateGroup>
							</VisualStateManager.VisualStateGroups>
						</Border>
						
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>
		
		
	</UserControl.Resources>
	<Border BorderBrush="White" Background="White" CornerRadius="15" BorderThickness="2">
		<Grid>
			<Grid.ColumnDefinitions>
				<ColumnDefinition Width="27"/>
				<ColumnDefinition/>
			</Grid.ColumnDefinitions>		
			<Button Content="Button" Grid.Column="0" Style="{StaticResource ButtonClose}" Command="{Binding CloseCommand, ElementName=UserControl}" Margin="0,0,1,0"/>
			<CheckBox Grid.Column="1" Style="{DynamicResource CheckBoxPingUnPing}" IsChecked="{Binding IsPinned,ElementName=UserControl, Mode=TwoWay}" Margin="0"/>
		</Grid>
	</Border>
</UserControl>